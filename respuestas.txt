Respuestas a las preguntas de la práctica 4

1.	¿Qué es rvm (Ruby Version Manager)?

	Para solucionar los problemas que existen cuando se intenta instalar una versión de ruby directamennte, como tener que instalar y desinstalar para actualizar a una nueva versión, la comunidad creó alternativas, existen varias, pero la mas popular y mas cómoda de usar es RVM, Ruby Versión Manager.

	Una vez instalado RVM, nos permitirá instalar/escoger la versión de Ruby y de Rails que deseemos utilizar en cada proyecto. También podremos configurar nuestros Gemsets, o grupos de gemas, las gemas es la forma como se les llama en Ruby a las librerías.

	Los Gemsets que instalemos estarán disponibles para ser reutilizados en diferentes proyectos. También es buena idea usar RVM en entornos de producción, aunque solo tengamos un Gemset, ya que facilita el upgrade/downgrade de las versiones tanto de Ruby como de Rails.

2.	¿Cuáles son las diferencias entre la ejecución del programa "Hola Mundo" con el intérprete de Ruby (ruby helloWorld.rb) y el intérprete interactivo del ejercicio anterior?

A)	MacBook-Pro-de-Erik:prct04 erikbv99421$ irb 
	2.1.5 :001 > puts "Hello World"
	Hello World
	 => nil 
	2.1.5 :002 > 

B)	MacBook-Pro-de-Erik:prct04 erikbv99421$ irb Helloworld.rb 
	2.1.5 :001 > puts "Hello World"2.1.5 :001 > 
	Hello World
	 => nil 
	2.1.5 :001 > 

3.	¿Cuáles son las diferencias entre la ejecución del programa "Hola Mundo" con el intérprete interactivo y con pry?
	
	MacBook-Pro-de-Erik:prct04 erikbv99421$ ruby byebyeworld.rb 

	From: /Users/erikbv99421/Documents/Lpp/prct04/byebyeworld.rb @ line 8 :

     3: #define a method
     4: def byebye() puts "bye bye world!!!" end
     5: #setxto10
     6: x=10
     7: #start a REPL session
 =>  8: binding.pry
     9: #program resumes here (after pry session)
    10: puts "program resumes here. Value of x is: #{x}."

	[1] pry(main)> puts x
	10
	=> nil
	[2] pry(main)> def hello
	[2] pry(main)*   puts "Hello World"
	[2] pry(main)* end  
	=> :hello
	[3] pry(main)> hello
	Hello World
	=> nil
	[4] pry(main)> byebye
	bye bye world!!!
	=> nil
	[5] pry(main)> x="changed"
	=> "changed"
	[6] pry(main)> exit
	program resumes here. Value of x is: changed.

/***********
BIBLIOGRAFÍA
/***********

https://platzi.com/blog/introduccion-ruby-on-rails/

http://code.tutsplus.com/tutorials/how-to-install-ruby-on-a-mac--net-21664